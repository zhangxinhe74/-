
  <script>
    // 递归方法
   function fbnq(n){
    if(n<2){
      return 1
    }else if(n==0){
      return 0
    }
    return fbnq(n-1)+fbnq(n-2);
   }
   console.log(fbnq(10))
  //  -------------------------------
  //  方法二 迭代
   function fbnq(n){    10
     if(n<2){
       return 1
     }
     if(n==0){
       return 0
     }else{
      var arr = new Array(n+1)
      arr[0] = 0;
      arr[1] = 1;
      for(var i = 2;i < n + 1;i++){
        arr[i] = arr[i-1] + arr[i-2]
      }
      return arr[n]
     }
   }
   console.log(fbnq(10))
  //3动态规划
  function Fibonacci(n)
{
    // write code here
    let f=0,
        g=1;
    while(n--){
        g+=f; //g = g+f = 1  g=2 g=3 g=5 g=8
        f=g-f; //f=g-f 1   f=1   f=2  f=3 f=5
     }
    return f;
}
console.log(Fibonacci(10))
  </script>
